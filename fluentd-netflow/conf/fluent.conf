##########################################
#### NOTES
##########################################
# Be Sure and Replace the following variables:
# <MAILSERVER> = Local Mailserver
# <FROM EMAIL> = From Notifications Email
# <TO EMAIL> = To Notifications Email
###########################################

<source>
  @type netflow
  tag netflow.event
  
  # optional parameters
  bind 0.0.0.0
  port 5550

  # optional parser parameters
  versions [5, 9]
  #switched_times_from_uptime true
</source>

<match netflow.event>
    @type rewrite_tag_filter
    rewriterule1 ipv4_dst_addr ^10\..*$ local.dst
    rewriterule2 ipv4_dst_addr ^172\.[1-3]\..*$ local.dst
    rewriterule3 ipv4_dst_addr ^192\.168\..*$ local.dst
    rewriterule4 ipv4_dst_addr .+ notlocal.dst
</match>

# Records Output:
#    local.dst - Matches a Local IP in Destination Field
#    notlocal.dst - is a Non-Local IP in Destination Field and needs GeoIP Added

<match notlocal.dst>
        @type geoip
        flush_interval 5s
        tag geoip.dst.${tag}
        geoip_lookup_key ipv4_dst_addr
        <record>
                dst_addr_latitude         ${latitude["ipv4_dst_addr"]}
                dst_addr_longitude        ${longitude["ipv4_dst_addr"]}
                dst_addr_country_code3    ${country_code3["ipv4_dst_addr"]}
                dst_addr_country          ${country_code["ipv4_dst_addr"]}
                dst_addr_country_name     ${country_name["ipv4_dst_addr"]}
                dst_addr_dma              ${dma_code["ipv4_dst_addr"]}
                dst_addr_area             ${area_code["ipv4_dst_addr"]}
                dst_addr_region           ${region["ipv4_dst_addr"]}
                dst_addr_city             ${city["ipv4_dst_addr"]}
                dst_location              ${latitude["ipv4_dst_addr"]},${longitude["ipv4_dst_addr"]}
        </record>
        skip_adding_null_record  true
        #log_level         info
</match>

# Records Output:
#    geoip.dst - Record that has a non-local dst IP and has had GeoIP records added
#    local.dst - Record that has a local dst IP and has not been modified

<match geoip.dst>
        @type record_reformer
        tag src_lookups_added
        <record>
            senderbase_lookup_dst http://www.senderbase.org/lookup/?search_string=${ipv4_dst_addr}
            spamhaus_lookup_dst http://www.spamhaus.org/query/bl?ip=${ipv4_dst_addr}
        </record>
</match>

# Records Output:
#     src_lookups_added - Record that had SRC GeoIP information and has had Spam/Senderbase URL's added
#     local.dst - Record with no SRC GeoIP Information that is passing on.

<match src_lookups_added local.dst>
    @type rewrite_tag_filter
    rewriterule1 ipv4_src_addr ^10\..*$ local.src
    rewriterule2 ipv4_src_addr ^172\.[1-3]\..*$ local.src
    rewriterule3 ipv4_src_addr ^192\.168\..*$ local.src
    rewriterule4 ipv4_src_addr .+ notlocal.src
</match>

# Records Output:
#     local.src - Record that has a Local IP for Src field
#     notlocal.src - Record with a non-local IP for Src Field that needs GeoIP Added

<match notlocal.src>
        @type geoip
        flush_interval 5s
        tag geoip.src
        geoip_lookup_key ipv4_src_addr
        <record>
                src_addr_latitude         ${latitude["ipv4_src_addr"]}
                src_addr_longitude        ${longitude["ipv4_src_addr"]}
                src_addr_country_code3    ${country_code3["ipv4_src_addr"]}
                src_addr_country          ${country_code["ipv4_src_addr"]}
                src_addr_country_name     ${country_name["ipv4_src_addr"]}
                src_addr_dma              ${dma_code["ipv4_src_addr"]}
                src_addr_area             ${area_code["ipv4_src_addr"]}
                src_addr_region           ${region["ipv4_src_addr"]}
                src_addr_city             ${city["ipv4_src_addr"]}
                src_location              ${latitude["ipv4_src_addr"]},${longitude["ipv4_src_addr"]}
        </record>
        skip_adding_null_record  true
        #log_level         info
</match>

# Records Output:
#     geoip.src - Record with non-local src IP that has had GeoIP information added
#     notlocal.src - Record with a local src IP that has not been changed.

<match geoip.src>
        @type record_reformer
        tag src_lookups_added
        <record>
            senderbase_lookup_src http://www.senderbase.org/lookup/?search_string=${ipv4_src_addr}
            spamhaus_lookup_src http://www.spamhaus.org/query/bl?ip=${ipv4_src_addr}
        </record>
</match>

# Records Output:
#     src_lookups_added - Record with Src GeoIP information with URL's added
#     notlocal.src - Record with no Src GeoIP information that has not been changed

# Copy Everything to Elasticsearch and STDOUT
<match **>
        @type copy
        <store>
                @type elasticsearch
                host elasticsearch
                port 9200
                logstash_format true
                logstash_prefix netflow
                logstash_dateformat %Y.%m.
                reload_on_failure true
                index_name fluentd
                type_name fluentd
                utc_index true
                buffer_chunk_limit 800m
                flush_interval 5s
                flush_at_shutdown true
                disable_retry_limit false
                retry_limit 17
                retry_wait 1s
                num_threads 2
        </store>
        #<store>
        #        @type stdout
        #</store>
</match>
